{{Script_Object_Summary
| title = Utility
| name = [[SFM:Script-Utility|Utility]]
| extends = [[SFM:Script-ScriptObject|ScriptObject]]
| flags = Native, Hidden
}}


== Definition ==
The <code>Utility.psc</code> source file header definition for this script.

<source lang="papyrus">
ScriptName Utility Native Hidden
</source>


== Documentation ==
No documentation comments were provided in the <code>Utility.psc</code> source file.


== Member ==
The members that belong to this script, grouped by kind.

=== Function ===
{{Script_Object_Member_Summary
| title = CallGlobalFunction
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/CallGlobalFunction|CallGlobalFunction]]
| kind = Function
| flags = Native Global
| returns = var
| parameters = string asScriptName, string asFuncName, var[] aParams
| documentation = Calls a global function specified by name. Note that the compiler cannot check that the function
exists, nor that the parameters are the right type. It will also not be able to auto-cast, so
you must pre-cast the parameters to the right type (derived or parent types won't work). Will
error if the function or script type are not valid or don't exist
}}

{{Script_Object_Member_Summary
| title = CallGlobalFunctionNoWait
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/CallGlobalFunctionNoWait|CallGlobalFunctionNoWait]]
| kind = Function
| flags = Native Global
| parameters = string asScriptName, string asFuncName, var[] aParams
| documentation = Calls a global function specified by name without waiting for it to return. Note that the compiler
cannot check that the function exists, nor that the parameters are the right type. It will also not
be able to auto-cast, so you must pre-cast the parameters to the right type (derived or parent
types won't work). Will error if the function or script type are not valid or don't exist
}}

{{Script_Object_Member_Summary
| title = GameTimeToString
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GameTimeToString|GameTimeToString]]
| kind = Function
| flags = Native Global
| returns = string
| parameters = float afGameTime
| documentation = Converts a float game time (in terms of game days passed) to a string detailing the date
and time it represents in "MM/DD/YYYY HH:MM" format. A 24-hour clock is used, and the function
is latent (due to issues in the current architecture with returning strings from code)
}}

{{Script_Object_Member_Summary
| title = GetCurrentGameTime
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetCurrentGameTime|GetCurrentGameTime]]
| kind = Function
| flags = Native Global
| returns = float
| documentation = Obtains the current game time in terms of game days passed (same as the global variable)
}}

{{Script_Object_Member_Summary
| title = GetCurrentRealTime
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetCurrentRealTime|GetCurrentRealTime]]
| kind = Function
| flags = Native Global
| returns = float
| documentation = Obtains the number of seconds since the application started (the same timer that WaitMenuPause uses)
Does not take into account menu-paused, or VM frozen time
Most useful for determining how long something took to run
}}

{{Script_Object_Member_Summary
| title = GetCurrentStackID
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetCurrentStackID|GetCurrentStackID]]
| kind = Function
| flags = Native Global DebugOnly
| returns = int
| documentation = Obtains the ID number of the current running stack
}}

{{Script_Object_Member_Summary
| title = IntToHex
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/IntToHex|IntToHex]]
| kind = Function
| flags = Global Native
| returns = string
| parameters = int IntID
| documentation = Int to Hex converter. General use, but mainly for converting GetFormID which returns an Int to get the Hex ID
}}

{{Script_Object_Member_Summary
| title = IsGameMenuPaused
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/IsGameMenuPaused|IsGameMenuPaused]]
| kind = Function
| flags = Native Global
| returns = bool
| documentation = Returns whether the game is currently in menu-paused or not
}}

{{Script_Object_Member_Summary
| title = RandomFloat
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/RandomFloat|RandomFloat]]
| kind = Function
| flags = Native Global
| returns = float
| parameters = float afMin = 0.0, float afMax = 1.0
| documentation = Generates a random floating point number between afMin and afMax (inclusive)
}}

{{Script_Object_Member_Summary
| title = RandomFloatsFromSeed
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/RandomFloatsFromSeed|RandomFloatsFromSeed]]
| kind = Function
| flags = Native Global
| returns = float[]
| parameters = int aiSeed, int aiCount, float afMin = 0.0, float afMax = 1.0
| documentation = Generates an array of pseudorandom floating point numbers from a specific seed between afMin and afMax (inclusive)
}}

{{Script_Object_Member_Summary
| title = RandomInt
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/RandomInt|RandomInt]]
| kind = Function
| flags = Native Global
| returns = int
| parameters = int aiMin = 0, int aiMax = 100
| documentation = Generates a random integer between aiMin and aiMax (inclusive)
}}

{{Script_Object_Member_Summary
| title = RandomIntsFromSeed
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/RandomIntsFromSeed|RandomIntsFromSeed]]
| kind = Function
| flags = Native Global
| returns = int[]
| parameters = int aiSeed, int aiCount, int aiMin = 0, int aiMax = 100
| documentation = Generates an array of pseudorandom integer numbers from a specific seed between aiMin and aiMax (inclusive)
}}

{{Script_Object_Member_Summary
| title = SetINIFloat
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/SetINIFloat|SetINIFloat]]
| kind = Function
| flags = Native Global DebugOnly
| parameters = string ini, float value
| documentation = Set the given INI by type
}}

{{Script_Object_Member_Summary
| title = SetINIInt
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/SetINIInt|SetINIInt]]
| kind = Function
| flags = Native Global DebugOnly
| parameters = string ini, int value
}}

{{Script_Object_Member_Summary
| title = SetINIBool
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/SetINIBool|SetINIBool]]
| kind = Function
| flags = Native Global DebugOnly
| parameters = string ini, bool value
}}

{{Script_Object_Member_Summary
| title = SetINIString
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/SetINIString|SetINIString]]
| kind = Function
| flags = Native Global DebugOnly
| parameters = string ini, string value
}}

{{Script_Object_Member_Summary
| title = SplitStringChars
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/SplitStringChars|SplitStringChars]]
| kind = Function
| flags = Native Global
| returns = int[]
| parameters = string aString
| documentation = String parsing functions
}}

{{Script_Object_Member_Summary
| title = Wait
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/Wait|Wait]]
| kind = Function
| flags = Native Global
| parameters = float afSeconds
| documentation = Waits for the specified amount of time (latent). Timer will not run during menu mode
}}

{{Script_Object_Member_Summary
| title = WaitGameTime
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/WaitGameTime|WaitGameTime]]
| kind = Function
| flags = Native Global
| parameters = float afHours
| documentation = Waits for the specified amount of game time (latent)
}}

{{Script_Object_Member_Summary
| title = WaitMenuPause
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/WaitMenuPause|WaitMenuPause]]
| kind = Function
| flags = Native Global
| parameters = float afSeconds
| documentation = Waits for the specified amount of time (latent) - Timer WILL run during menu mode
}}

{{Script_Object_Member_Summary
| title = CaptureFrameRate
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/CaptureFrameRate|CaptureFrameRate]]
| kind = Function
| flags = Native Global DebugOnly
| returns = string
| parameters = int numFrames
| documentation = Gets you a string describing the frame rate for a certain number of frames
(String will be no longer than 1K characters long, separated by commas)
}}

{{Script_Object_Member_Summary
| title = EnterTestData
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/EnterTestData|EnterTestData]]
| kind = Function
| flags = Native Global DebugOnly
| parameters = string astestType, string astestMatter, string astestDetails, string astestResultContext, string astestResult
| documentation = Sends the passed in test data to the tests website.
}}

{{Script_Object_Member_Summary
| title = PostStartUpTimes
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/PostStartUpTimes|PostStartUpTimes]]
| kind = Function
| flags = Native Global DebugOnly
| documentation = Sends the start up times to the tests website.
}}

{{Script_Object_Member_Summary
| title = StartFrameRateCapture
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/StartFrameRateCapture|StartFrameRateCapture]]
| kind = Function
| flags = Native Global DebugOnly
| documentation = Starts or ends a frame rate capture -- then you can get the min or max since
frame capture started at any time
}}

{{Script_Object_Member_Summary
| title = EndFrameRateCapture
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/EndFrameRateCapture|EndFrameRateCapture]]
| kind = Function
| flags = Native Global DebugOnly
}}

{{Script_Object_Member_Summary
| title = GetAverageFrameRate
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetAverageFrameRate|GetAverageFrameRate]]
| kind = Function
| flags = Native Global DebugOnly
| returns = float
}}

{{Script_Object_Member_Summary
| title = GetMinFrameRate
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetMinFrameRate|GetMinFrameRate]]
| kind = Function
| flags = Native Global DebugOnly
| returns = float
}}

{{Script_Object_Member_Summary
| title = GetMaxFrameRate
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetMaxFrameRate|GetMaxFrameRate]]
| kind = Function
| flags = Native Global DebugOnly
| returns = float
}}

{{Script_Object_Member_Summary
| title = GetCurrentMemory
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetCurrentMemory|GetCurrentMemory]]
| kind = Function
| flags = Native Global DebugOnly
| returns = string
| documentation = Memory tracking functions - only available if memory tracking is turned on
}}

{{Script_Object_Member_Summary
| title = GetBudgetCount
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetBudgetCount|GetBudgetCount]]
| kind = Function
| flags = Native Global DebugOnly
| returns = int
}}

{{Script_Object_Member_Summary
| title = GetCurrentBudget
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetCurrentBudget|GetCurrentBudget]]
| kind = Function
| flags = Native Global DebugOnly
| returns = string
| parameters = int aiBudgetNumber
}}

{{Script_Object_Member_Summary
| title = GetBudgetLimit
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetBudgetLimit|GetBudgetLimit]]
| kind = Function
| flags = Native Global DebugOnly
| returns = string
| parameters = int aiBudgetNumber
}}

{{Script_Object_Member_Summary
| title = OverBudget
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/OverBudget|OverBudget]]
| kind = Function
| flags = Native Global DebugOnly
| returns = bool
| parameters = int aiBudgetNumber
}}

{{Script_Object_Member_Summary
| title = GetBudgetName
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetBudgetName|GetBudgetName]]
| kind = Function
| flags = Native Global DebugOnly
| returns = string
| parameters = int aiBudgetNumber
}}

{{Script_Object_Member_Summary
| title = ExpiryDay
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/ExpiryDay|ExpiryDay]]
| kind = Function
| flags = Global
| returns = float
| parameters = float DaysFromNow, Planet LocalPlanet = none, float MaxUniversalDays = -1.0, float FutureStartDay = -1.0
| documentation = returns a float representing days in the future from now (in terms of GameDaysPassed - where 1 = 24 hours)
**DaysFromNow**: how many days in the future should the expiration date be?
**LocalPlanet**: (optional, ignored if none) will scale DaysFromNow so that it will reflect local day length on planet is if different than universal 24 standard
**MaxUniversalDays**: (optional, ignored if <= 0) - no matter the local day length scale, this is the max (24 hour) days you want to add - useful for tidally locked planets, or planets with exceptionally long days
**FutureStartDay**: (optional, ignored if < GameDaysPassed) - the start day to add DaysFromNow to.
}}

{{Script_Object_Member_Summary
| title = HasExpiryDayPassed
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/HasExpiryDayPassed|HasExpiryDayPassed]]
| kind = Function
| flags = Global
| returns = bool
| parameters = float afExpiryDay
| documentation = checks to see if the passed in value is less than the current day
}}

{{Script_Object_Member_Summary
| title = GetHoursUntilLocalHour
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetHoursUntilLocalHour|GetHoursUntilLocalHour]]
| kind = Function
| flags = Global
| returns = float
| parameters = float afTargetHourLocal
| documentation = returns hours until specified LOCAL target hour (local equivalent of 24-hour time, 0.0-24.0)
}}

{{Script_Object_Member_Summary
| title = GetFirstPlayer
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetFirstPlayer|GetFirstPlayer]]
| kind = Function
| flags = Global
| returns = ObjectReference
| parameters = ObjectReference refToCheck01, ObjectReference refToCheck02, ObjectReference refToCheck03 = none, ObjectReference refTocheck04 = none
| documentation = returns first player in list of refs passed in (mainly for use in distance check events)
}}

{{Script_Object_Member_Summary
| title = GetFirstNonPlayer
| script = [[SFM:Script-Utility|Utility]]
| name = [[SFM:Script-Utility/GetFirstNonPlayer|GetFirstNonPlayer]]
| kind = Function
| flags = Global
| returns = ObjectReference
| parameters = ObjectReference refToCheck01, ObjectReference refToCheck02, ObjectReference refToCheck03 = none, ObjectReference refTocheck04 = none
| documentation = returns first non-player in list of refs passed in (mainly for use in distance check events)
}}


[[Category:Starfield_Mod-Papyrus]]
